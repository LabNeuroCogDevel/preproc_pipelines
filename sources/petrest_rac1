#!/usr/bin/env bash
SOURCE_DESC80="mMR DA PET first rest in session 1 (rac tracer)"

_PETEPISUFFIX=racrest1
SLICESETTINGSFILE=/Volumes/Phillips/mMR_PETDA/scripts/sliceTimings.1D 
export USEOLDPPOPT=-use_old_mni

# look up e*rest* directories from pet study in the mr protocol database
# select the last rest with more than 200 dicoms for ids that have a B in them (only rac+dtbz people)
# only the last session and only where there are two sessions on the same day
# merge with the closest fieldmap mag and phase
# output columns:
#  lunadate8 restepidir fmmagdir fmphasedir rest2magSeqNoDiff
SQLDB=/Volumes/Zeus/mr_sqlite/db 
_dbquery() {
 sqlite3 -separator $'\t' $SQLDB "
with 
 func_count as (
  select id,sessionname,count(*) as nfuncs 
  from mrinfo 
  where study like 'pet' and Name like '%BOLD_x%' and ndcm = 200 
  group by id,sessionname 
 ),
 all_pet_rest as (
  select patname,id,sessionname,count(*) as nrest, min(seqno) as firstrest,  max(seqno) as lastrest
  from mrinfo 
  where study like 'pet' and Name like '%BOLD_rest%'  and ndcm = 320 
  group by id,patname,sessionname
 ),
 rest_task_count as (
 select ap.*,nfuncs
   from all_pet_rest as ap
   left join func_count as fc
    on ap.id=fc.id  and ap.sessionname = fc.sessionname 
 ),
 -- fieldmap: match phase and magnitude
 fm_mag as (
 select patname,id,sessionname,seqno,dir
  from mrinfo 
  where study like 'pet' and Name like '%gre_field_mapping' and ndcm = 90
 ),
 fm_phase as (
 select patname,id,sessionname,seqno,dir
  from mrinfo 
  where study like 'pet' and Name like '%gre_field_mapping' and ndcm = 45
 ), 
 fm_match as (
  select m.patname,m.id,m.sessionname, m.dir as fmmag,p.dir as fmphase, m.seqno as magseqno ,p.seqno as phaseseqno
  from fm_mag as m 
  inner join fm_phase as p on m.id=p.id and m.patname=p.patname and m.sessionname=p.sessionname
  where m.seqno + 1 = p.seqno 
 ),
 -- pick the rest we want
 rest_pick as (
 select substr(mi.patname,1,14) as ld8, 
  rtc.sessionname, mi.dir,mi.seqno, nrest
  from rest_task_count as rtc 
  join mrinfo as mi on rtc.id=mi.id and mi.sessionname = rtc.sessionname
   -- LOOK HERE: determine which rest we want  
   and mi.seqno=rtc.firstrest
 where
    nfuncs is not null
    and nrest = 2  
),
-- put rest and fm together
fm_rest as (
 select abs(seqno - magseqno) as diff, * from rest_pick as rp 
 join fm_match as fm on  rp.sessionname=fm.sessionname
 order by ld8,diff
),
-- find the closest fm to the rest
best_match_no as (
 select sessionname, min(diff) as closestdiff from fm_rest group by sessionname
)
-- give lunaid rest and fm dirs: mag is 2x as large (mag1,mag2) and before phase
select ld8,dir as restdir,fmmag,fmphase,diff 
  from fm_rest 
  join best_match_no on closestdiff=diff and fm_rest.sessionname = best_match_no.sessionname
";
# ld8, restdir, fmmag, fmphase, diff
echo -e "99998_20190103	/Volumes/Phillips/mMR_PETDA/raw/99998_20190103/2019.01.03-10.49.25/99998_20190103/ep2d_BOLD_resting_320meas_672x672.8	/Volumes/Phillips/mMR_PETDA/raw/99998_20190103/2019.01.03-10.49.25/99998_20190103/gre_field_mapping_96x96.5	/Volumes/Phillips/mMR_PETDA/raw/99998_20190103/2019.01.03-10.49.25/99998_20190103/gre_field_mapping_96x96.6	2"
echo -e "99998_20190808	/Volumes/Phillips/mMR_PETDA/raw/99998_20190808/2019.08.08-13.14.49/20190808/Head_ep2d_BOLD_resting_WAIT-FOR-RECONSTRUCTION-FOR-EACH-SERIES_672x672.35	/Volumes/Phillips/mMR_PETDA/raw/99998_20190808/2019.08.08-13.14.49/20190808/Head_gre_field_mapping-x2_96x96.32	/Volumes/Phillips/mMR_PETDA/raw/99998_20190808/2019.08.08-13.14.49/20190808/Head_gre_field_mapping-x2_96x96.33	2"
# 20201201 - rest failures (no good or repeat) mess up the db
# e.g.
#  dcmdirtab --cols seqno,pname,ndcm  -d '/Volumes/Hera/Raw/MRprojects/mMRDA-dev/*-08*/B0276/*'|sort -n
tabsep(){ echo "$@"|sed 's/ \+/\t/g';}
local rawdir=/Volumes/Hera/Raw/MRprojects/mMRDA-dev
tabsep 11531_20190801 $rawdir/*-14*/B0326/*.{16,17,18} 1
tabsep 11531_20190801 $rawdir/*-14*/B0326/*.{38,33,34} 2

tabsep 11480_20190321 $rawdir/*-13*/B0280/*.{9,10,11} 1
tabsep 11480_20190321 $rawdir/*-13*/B0280/*.{35,28,27} 2

tabsep 11458_20190314 $rawdir/*-08*/B0278/*.{9,10,11} 1

tabsep 11248_20190307 $rawdir/*-08*/B0276/*.{9,10,11} 1
}

SUBJECTS_DIR="/Volumes/Phillips/mMR_PETDA/FS"
DICOM_PAT="MR*"

FUNCTR="1.5"
FUNCSLICEACQ="seqasc"

# where is raw data, mostly ignored in favor of sqlite db
MRROOT="/Volumes/Phillips/Raw/MRprojects/mMRDA-dev/"

FM_CFG=pet
FMNMAG=90
FMNPHS=45



_epimrpath() {
   # 20170719 - remove when duplicate becaue path has e.g. a/b and a//b
 mrpath=$(_dbquery | grep -E ${1/_/.} |grep -v /moved/ |  cut -f2| sed 's:/\+:/:g' | grep -v 11515_20172018 | uniq )
 if [ -z "$mrpath" -o ! -r "$mrpath" ]; then
    echo "$1 has bad entry in '$SQLDB' (see ${BASH_SOURCE}::_dbquery|grep $1):" >&2
    echo "  mrpath DNE '$mrpath'" >&2
    return 1
 fi
 echo $mrpath
}
####

function list_all {
 _dbquery | cut -f1
}

# for MHT1_2mm , subj_t1 can be dicomdir -- dicoms will be linked into cwd and then deleted (same as final output)
function subj_t1 {
 wantonlyoneid $@ || return 1
 #file_exists_test "$SUBJECTS_DIR/$1/mri/T1.mgz"
 subj_MRT1 "$1"
}

# Want G2 but in year 2 we dont have, so will settle for G1
function subj_MRT1 {
 wantonlyoneid $@ || return 1

 # we have two 
 # pick this over 34 over 11616_20170807/Sagittal_MPRAGE_ADNI_G2_256x240.25
 if [[ "$1" = 11616_20170807 ]]; then
  echo /Volumes/Phillips/Raw/MRprojects/mMRDA-dev/2017.08.07-14.17.11/11616_20170807/Sagittal_MPRAGE_ADNI_G2_256x240.34
  return 0
 elif [[ "$1" = 11443_20151022 ]]; then
  echo /Volumes/Phillips/Raw/MRprojects/mMRDA-dev/2015.10.22-10.52.52/B0078/Sagittal_MPRAGE_ADNI_256x240.25/
  return 0
 elif [[ "$1" = 11429_20150918 ]]; then
  echo /Volumes/Phillips/Raw/MRprojects/mMRDA-dev/2015.09.18-08.35.03/B0070/Head_Sagittal_MPRAGE_ADNI_G2_256x240.10/
  return 0
 elif [[ "$1" = 11434_20160601 ]]; then
  echo /Volumes/Phillips/Raw/MRprojects/mMRDA-dev/2016.06.01-11.05.56/B0149/Sagittal_MPRAGE_ADNI_G2_fov320_320x300.10
  return 0
 elif [[ "$1" == 11579_20180323 ]]; then
    echo /Volumes/Phillips/Raw/MRprojects/mMRDA-dev/2018.03.23-13.16.29/11579_20180323/Sagittal_MPRAGE_ADNI_G2_256x240.41/
    return 0
 elif [[ "$1" == 11429_20150918 ]]; then
    echo /Volumes/Phillips/Raw/MRprojects/mMRDA-dev/2015.09.18-08.35.03/B0070/Head_Sagittal_MPRAGE_ADNI_G2_256x240.10
    return 0
 elif [[ "$1" == 11515_20171018 ]]; then
    echo /Volumes/Phillips/Raw/MRprojects/mMRDA-dev/2017.10.18-15.50.46/11515_20171018/Sagittal_MPRAGE_ADNI_G2_256x240.27
    return 0
 #elif [[ "$1" = 11434_20160601 ]]; then
 # echo /Volumes/Phillips/Raw/MRprojects/mMRDA-dev/2016.06.01-08.50.21/B0149/Sagittal_MPRAGE_ADNI_G2_256x240.10/
 # return 0
 fi

 mrpath=$(_epimrpath "$1")
 subj_mr_pat "$(cd $mrpath/..;pwd)"  '*Sagittal_MPRAGE_ADNI_G2_256x240*' 176 ||
  subj_mr_pat "$(cd $mrpath/..;pwd)"  '*Sagittal_MPRAGE_ADNI_G2_256x256*' 176 || # 11459_20160121
  subj_mr_pat "$(cd $mrpath/..;pwd)"  '*Sagittal_MPRAGE_ADNI_256x240*' 160 || return 1
 #subj_mr_pat $MRROOT/$1 'axial_mprage_256x208*' 176 || return 1
}

# segemention mask from freesurfer
function subj_FS_aseg {
 wantonlyoneid $@ || return 1
 file_exists_test "$SUBJECTS_DIR/$1/mri/aseg.mgz"
}

function subj_t2 {
 wantonlyoneid $@ || return 1
 mrpath=$(_epimrpath $1) || return 1
 epi=${1}_${_PETEPISUFFIX}.nii.gz

 # kludgy hack if we have func.nii.gz in current directory, dont do anything
 # 20180417 -- for brnssuwdktm_rest
 [ -n "$SKIPDCM2NII" -a "$SKIPDCM2NII" == $1 ] && echo func.nii.gz && return 0

 cmd="dcmstack --include '.*' --file-ext '$DICOM_PAT'  --embed-meta -o $(basename $epi .nii.gz) --dest-dir . $mrpath"
 [ ! -r "$epi" ] && eval $cmd && 3dNotes -h "$cmd" $epi

 [ ! -r "$epi" ] && return 1

 # also save out a .json file for parameters
 jsonfile=${epi/.nii.gz/.json}
 [ ! -r $jsonfile ] &&  nitool dump $epi > $jsonfile

 # important this is not absolute path!
 # will always be relatvei to subject folder
 # preprocessFunctional cannot do absolute paths :)
 echo $epi
}
function subj_ref {
 wantonlyoneid $@ || return 1
 return 1
}
function subj_physio {
 wantonlyoneid $@ || return 1
}

function subj_fm {
 wantonlyoneid $@ || return 1

 # local epipath=$( _dbquery |grep $1 | cut -f 2)
 # [ -z "$epipath" ] && echo "$1: epipath ('$epipath') DNE" >&2 && return 1
 # local path=$(dirname $epipath)
 # fmpatt='gre_field_mapping'
 # # if this is rest2 seach for second fieldmap
 # [ $_PETEPISUFFIX = rac2rest ] && fmpatt="$fmpatt-x2"

 # mag=$(subj_mr_pat $path "${fmpatt}_*" $FMNMAG)
 # [ -z "$mag" ] && return 1
 # phase=$(subj_mr_pat $path "${fmpatt}_*" $FMNPHS)
 # [ -z "$phase" ] && return 1
 # echo "$mag $phase"

 _dbquery |grep -E ${1/_/.} | cut -f3,4
}

