#!/usr/bin/bash
PIPE_FOR="SM"
PIPE_DESC80="MMY2 -scrub +wave +hpfilter.099 +reg:m,wm,csf,alldervs"
PIPE_DESC="
This pipeline processes rest data for Scott's MEG subjects for multimodal pre-multiband+field warping (Year2)
scrubbing no
wavlet    yes
filter    filter anyting lower than .009 (give 3dBandpass 999 > Nysquist => highpass only)
regs      6motion,wm,csf,d6motion,dwm,dcsf 
"
PIPE_DEPENDS=("MHT1_2mm")
PIPE_VERSION="20151211"
FINALOUT=( ".preprocessfunctional_complete" )

#  override list_all for data
#  use only subjects scott cares about
function list_all {
 cat <<EOF
10644_20130327
10662_20130509
10873_20130610
10895_20130201
10910_20130207
10915_20130301
10918_20130129
10931_20130219
10945_20130311
10960_20130402
10997_20130329
11043_20130307
11046_20130211
11052_20130820
11059_20130401
11075_20130625
11126_20130211
11136_20130218
11163_20130507
11165_20130513
11171_20130529
11173_20130603
11180_20130617
11188_20130625
11189_20130626
11190_20130627
11193_20130701
11196_20130711
EOF
}

function check_complete {
 wantonlyoneid $@ || return 1
 has_finalout  $1 || return 1
 return 0
}

function run_pipeline {
 id="$1"
 [ -z "$id" ] && warn "$FUNCNAME: no id given" && return 1

 read bet warp < <(find_t1final $id)

 [ ! -d "$id" ] && mkdir $id
 cd $id

 t2dir=$(subj_t2 $id)
 [ -z "$t2dir" ] && warn "cannot find t2dir for $id" && return 1

 #echo "'$t2dir' '$bet' '$warp'"
 #return 0

 if [ ! -r 'functional.nii.gz' ]; then
   [ $(find . -maxdepth 1 -type l -iname 'MR*' | wc -l) -gt 0 ] && rm MR*
   ! ln -s $t2dir/MR* ./ && warn "cannot link $t2dir/MR* files" && return 1
 fi

 yes | preprocessFunctional -delete_dicom yes -dicom 'MR*' \
   -mprage_bet $bet -warpcoef $warp \
   -4d_slice_motion -wavelet_despike  \
   -rescaling_method 10000_globalmedian \
   -template_brain MNI_3mm    \
   -nuisance_regression 6motion,wm,csf,d6motion,dwm,dcsf \
   -bandpass_filter 0.009 9999 \
   -no_hp #default is 80, maybe want 125s (.008)


   # these options are taken from the dicoms, hopefully
   #-tr 1.5 -slice_acquisition seqasc  \
}

