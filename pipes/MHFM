#!/usr/bin/bash
PIPE_DESC80="Preprocess fieldmap mag and phase"
PIPE_DESC="
Run the fieldmap portion of preprocessFunctional
"
PIPE_DEPENDS=""
PIPE_VERSION="20151215"
FINALOUT=("mrphase/.fieldmap_phase" "mrmag/.fieldmap_magnitude")

function check_complete {
 wantonlyoneid $@ || return 1
 has_finalout  $1 || return 1
 return 0
}

# run from $PPSUBJSDIR 
function run_pipeline {
 # check id input and make/cd into id dir
 id="$1"
 wantonlyoneid $id || return 1
 [ ! -d "$id" ] && mkdir $id
 cd $id

 # find the t1dir with MRs in it
 read mrmag mrphase < <(subj_fm $id)
 [ -z "$mrmag" -o -z "$mrphase" ] && return 1


 # create directory, link in MR*, add MR* to variable
 for fm in mrmag mrphase; do
   [ -d  $fm ] && continue
   mkdir $fm
   ! ln -s ${!fm}/MR* $fm && warn "should: rm -r $(pwd)/$fmdir" && return 1
 done


 ####
 ## UGLY HACK to get micheals field warping code to organize field mappings
 ####

 ## get MH script functions
 hmsrc=$(dirname $(which preprocessFunctional))/preproc_functions
 # /opt/ni_tools/fmri_processing_scripts/preproc_functions/fieldmap_dicom_nifti
 # /opt/ni_tools/fmri_processing_scripts/preproc_functions/prepare_fieldmap
 source $hmsrc/helper_functions
 source $hmsrc/fieldmap_dicom_nifti

 ## set expected variables
 logFile="$(pwd)/FM.log"

 fm_magnitude='mrmag/MR*'
 fm_phase='mrphase/MR*'

 # run
 fieldmap_dicom_nifti || return 1

 for f in mr*/*_inprocess; do
  [ -r $f ] && warn "removing $f" && rm $f
 done
 # exit successfuly
 return 0
}

# vim: set tabstop=7:
